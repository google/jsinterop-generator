package jsinterop.generator.externs.generics;

import jsinterop.annotations.JsFunction;
import jsinterop.annotations.JsOverlay;
import jsinterop.annotations.JsPackage;
import jsinterop.annotations.JsProperty;
import jsinterop.annotations.JsType;
import jsinterop.base.Js;
import jsinterop.base.JsPropertyMap;
import jsinterop.generator.externs.natives.JsArray;
import org.jspecify.annotations.Nullable;

@JsType(isNative = true, namespace = JsPackage.GLOBAL)
public interface Bar<
    U extends @Nullable Object, T extends @Nullable Object, V extends @Nullable Object> {
  @JsType(isNative = true, name = "?", namespace = JsPackage.GLOBAL)
  public interface BarFieldType<T extends @Nullable Object> {
    @JsType(isNative = true, name = "?", namespace = JsPackage.GLOBAL)
    public interface FooFieldType<T extends @Nullable Object> {
      @JsOverlay
      static <T extends @Nullable Object> Bar.BarFieldType.FooFieldType<T> create() {
        return Js.uncheckedCast(JsPropertyMap.of());
      }

      @JsProperty
      T getBaz();

      @JsProperty
      void setBaz(T baz);
    }

    @JsOverlay
    static <T extends @Nullable Object> Bar.BarFieldType<T> create() {
      return Js.uncheckedCast(JsPropertyMap.of());
    }

    @JsProperty
    Bar.BarFieldType.FooFieldType<T> getFoo();

    @JsProperty
    void setFoo(Bar.BarFieldType.FooFieldType<T> foo);
  }

  @JsType(isNative = true, name = "?", namespace = JsPackage.GLOBAL)
  public interface BarMethod2ParamType<V extends @Nullable Object, T extends @Nullable Object> {
    @JsOverlay
    static <V extends @Nullable Object, T extends @Nullable Object>
        Bar.BarMethod2ParamType<V, T> create() {
      return Js.uncheckedCast(JsPropertyMap.of());
    }

    @JsProperty
    T getBar();

    @JsProperty
    V getFoo();

    @JsProperty
    void setBar(T bar);

    @JsProperty
    void setFoo(V foo);
  }

  @JsFunction
  public interface BarMethod3FooCallbackFn<
      Z extends @Nullable Object,
      Y extends @Nullable Object,
      T extends @Nullable Object,
      V extends @Nullable Object> {
    @JsType(isNative = true, name = "?", namespace = JsPackage.GLOBAL)
    public interface ReturnType<
        Z extends @Nullable Object, Y extends @Nullable Object, T extends @Nullable Object> {
      @JsOverlay
      static <Z extends @Nullable Object, Y extends @Nullable Object, T extends @Nullable Object>
          Bar.BarMethod3FooCallbackFn.ReturnType<Z, Y, T> create() {
        return Js.uncheckedCast(JsPropertyMap.of());
      }

      @JsProperty
      Y getBar();

      @JsProperty
      Z getBaz();

      @JsProperty
      T getFoo();

      @JsProperty
      void setBar(Y bar);

      @JsProperty
      void setBaz(Z baz);

      @JsProperty
      void setFoo(T foo);
    }

    Bar.BarMethod3FooCallbackFn.ReturnType<Z, Y, T> onInvoke(V p0);
  }

  @JsFunction
  public interface BarMethod4FooCallbackFn<U extends @Nullable Object> {
    U onInvoke(U p0);
  }

  @JsFunction
  public interface BarMethod5FooCallbackFn<U extends @Nullable Object, T extends @Nullable Object> {
    @JsType(isNative = true, name = "?", namespace = JsPackage.GLOBAL)
    public interface P2UnionType<T extends @Nullable Object> {
      @JsOverlay
      static <T extends @Nullable Object> Bar.BarMethod5FooCallbackFn.P2UnionType<T> of(Object o) {
        return Js.cast(o);
      }

      @JsOverlay
      default String asString() {
        return Js.asString(this);
      }

      @JsOverlay
      default T asT() {
        return Js.cast(this);
      }

      @JsOverlay
      default boolean isString() {
        return (Object) this instanceof String;
      }
    }

    void onInvoke(U p0, @Nullable JsArray<U> p1, Bar.BarMethod5FooCallbackFn.P2UnionType<T> p2);

    @JsOverlay
    default void onInvoke(U p0, @Nullable JsArray<U> p1, String p2) {
      onInvoke(p0, p1, Js.<Bar.BarMethod5FooCallbackFn.P2UnionType<T>>uncheckedCast(p2));
    }

    @JsOverlay
    default void onInvoke(U p0, @Nullable JsArray<U> p1, T p2) {
      onInvoke(p0, p1, Js.<Bar.BarMethod5FooCallbackFn.P2UnionType<T>>uncheckedCast(p2));
    }

    @JsOverlay
    default void onInvoke(U p0, U @Nullable [] p1, Bar.BarMethod5FooCallbackFn.P2UnionType<T> p2) {
      onInvoke(p0, Js.<@Nullable JsArray<U>>uncheckedCast(p1), p2);
    }

    @JsOverlay
    default void onInvoke(U p0, U @Nullable [] p1, String p2) {
      onInvoke(p0, Js.<@Nullable JsArray<U>>uncheckedCast(p1), p2);
    }

    @JsOverlay
    default void onInvoke(U p0, U @Nullable [] p1, T p2) {
      onInvoke(p0, Js.<@Nullable JsArray<U>>uncheckedCast(p1), p2);
    }
  }

  @JsFunction
  public interface BarMethod6FooCallbackFn<U extends @Nullable Object, T extends @Nullable Object> {
    @Nullable InterfaceWithGeneric<T> onInvoke(U p0, @Nullable InterfaceWithGeneric<U> p1);
  }

  <V extends @Nullable Object> V barMethod2(Bar.BarMethod2ParamType<V, T> param);

  <Z extends @Nullable Object, Y extends @Nullable Object> void barMethod3(
      Bar.BarMethod3FooCallbackFn<Z, Y, T, ? super V> fooCallback);

  void barMethod4(Bar.BarMethod4FooCallbackFn<U> fooCallback);

  void barMethod5(Bar.BarMethod5FooCallbackFn<U, ? super T> fooCallback);

  void barMethod6(Bar.BarMethod6FooCallbackFn<U, T> fooCallback);

  @JsProperty
  @Nullable InterfaceWithGeneric<Bar.BarFieldType<T>> getBar();

  @JsProperty
  @Nullable InterfaceWithGeneric<Double> getBar2();

  @JsProperty
  V getBaz();

  @JsProperty
  U getFoo();

  @JsProperty
  void setBar(@Nullable InterfaceWithGeneric<Bar.BarFieldType<T>> bar);

  @JsProperty
  void setBar2(@Nullable InterfaceWithGeneric<Double> bar2);

  @JsProperty
  void setBaz(V baz);

  @JsProperty
  void setFoo(U foo);
}
